version: '3.9'
name: rabbitmq
# RabbitMQ stack

# RabbitMQ
#
# Page: https://www.rabbitmq.com/
# Repo: https://github.com/rabbitmq/rabbitmq-server
# Dckr: https://hub.docker.com/_/rabbitmq
# Cmps: N/A
#
# A reliable and mature messaging and streaming broker, which is easy to deploy
# on cloud environments, on-premises, and on your local machine. It is currently
# used by millions worldwide.

services:

  rabbitmq:
    container_name: ${COMPOSE_PROJECT_NAME}
    hostname: ${COMPOSE_PROJECT_NAME} # https://stackoverflow.com/questions/41330514/docker-rabbitmq-persistency
    image: rabbitmq:${RABBITMQ_TAG:-3-management}
    networks:
      - proxy
    volumes:
      - /etc/${COMPOSE_PROJECT_NAME}:/etc/rabbitmq
      - /var/lib/${COMPOSE_PROJECT_NAME}:/var/lib/rabbitmq
      - /etc/letsencrypt:/etc/letsencrypt:ro
    healthcheck:
      test: "rabbitmq-diagnostics -q check_running && rabbitmq-diagnostics -q check_local_alarms"
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      # Management WebUI
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mgmt.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose FQDN missing}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mgmt.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mgmt.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mgmt.service=${COMPOSE_PROJECT_NAME}-mgmt"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-mgmt.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}-mgmt.loadbalancer.server.port=15672"
      # AMQP
      - "traefik.tcp.routers.amqp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.amqp.service=amqp"
      - "traefik.tcp.routers.amqp.entrypoints=amqp"
      - "traefik.tcp.services.amqp.loadbalancer.server.port=5672"
      # AMQP Secure
      - "traefik.tcp.routers.amqps.rule=HostSNI(`amqp.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.amqps.tls=true"
      - "traefik.tcp.routers.amqps.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.amqps.service=amqps"
      - "traefik.tcp.routers.amqps.entrypoints=amqps"
      - "traefik.tcp.services.amqps.loadbalancer.server.port=5671"
      # EPMD
      - "traefik.tcp.routers.epmd.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.epmd.service=epmd"
      - "traefik.tcp.routers.epmd.entrypoints=epmd"
      - "traefik.tcp.services.epmd.loadbalancer.server.port=4369"
      # Stream
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream.service=${COMPOSE_PROJECT_NAME}-stream"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream.entrypoints=${COMPOSE_PROJECT_NAME}-stream"
      - "traefik.tcp.services.${COMPOSE_PROJECT_NAME}-stream.loadbalancer.server.port=5552"
      # Stream-over-TLS
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream-tls.rule=HostSNI(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream-tls.tls=true"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream-tls.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream-tls.service=${COMPOSE_PROJECT_NAME}-stream-tls"
      - "traefik.tcp.routers.${COMPOSE_PROJECT_NAME}-stream-tls.entrypoints=${COMPOSE_PROJECT_NAME}-stream-tls"
      - "traefik.tcp.services.${COMPOSE_PROJECT_NAME}-stream-tls.loadbalancer.server.port=5551"
      # STOMP
      - "traefik.tcp.routers.stomp.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.stomp.service=stomp"
      - "traefik.tcp.routers.stomp.entrypoints=stomp"
      - "traefik.tcp.services.stomp.loadbalancer.server.port=61613"
      # STOMP-over-TLS
      - "traefik.tcp.routers.stomp-tls.rule=HostSNI(`stomp-tls.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.stomp-tls.tls=true"
      - "traefik.tcp.routers.stomp-tls.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.stomp-tls.service=stomp-tls"
      - "traefik.tcp.routers.stomp-tls.entrypoints=stomp-tls"
      - "traefik.tcp.services.stomp-tls.loadbalancer.server.port=61614"
      # MQTT
      - "traefik.tcp.routers.mqtt.rule=HostSNI(`*`)"
      - "traefik.tcp.routers.mqtt.service=mqtt"
      - "traefik.tcp.routers.mqtt.entrypoints=mqtt"
      - "traefik.tcp.services.mqtt.loadbalancer.server.port=1883"
      # MQTT-over-TLS
      - "traefik.tcp.routers.mqtt-tls.rule=HostSNI(`mqtt-tls.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.mqtt-tls.tls=true"
      - "traefik.tcp.routers.mqtt-tls.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.mqtt-tls.service=mqtt-tls"
      - "traefik.tcp.routers.mqtt-tls.entrypoints=mqtt-tls"
      - "traefik.tcp.services.mqtt-tls.loadbalancer.server.port=8883"
      # STOMP-over-WebSockets
      - "traefik.tcp.routers.stomp-ws.rule=HostSNI(`stomp.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.stomp-ws.tls=true"
      - "traefik.tcp.routers.stomp-ws.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.stomp-ws.service=stomp-ws"
      - "traefik.tcp.routers.stomp-ws.entrypoints=stomp-ws"
      - "traefik.tcp.services.stomp-ws.loadbalancer.server.port=15674"
      # MQTT-over-WebSockets
      - "traefik.tcp.routers.mqtt-ws.rule=HostSNI(`mqtt-ws.${COMPOSE_DOMAIN}`)"
      - "traefik.tcp.routers.mqtt-ws.tls=true"
      - "traefik.tcp.routers.mqtt-ws.tls.certresolver=${CERT_RESOLVER}"
      - "traefik.tcp.routers.mqtt-ws.service=mqtt-ws"
      - "traefik.tcp.routers.mqtt-ws.entrypoints=mqtt-ws"
      - "traefik.tcp.services.mqtt-ws.loadbalancer.server.port=15675"

networks:
  proxy:
    external: true
