version: '3.9'
name: node-red
# Node-RED stack

# Node-RED
#
# Page: https://nodered.org/
# Code: https://github.com/node-red
# Dckr: https://hub.docker.com/r/nodered/node-red
# Cmps: https://nodered.org/docs/getting-started/docker#docker-stack--docker-compose
#
# Node-RED is a programming tool for wiring together hardware devices, APIs and
# online services in new and interesting ways. It provides a browser-based
# editor that makes it easy to wire together flows using the wide range of nodes
# in the palette that can be deployed to its runtime in a single-click.

services:

  node-red:
    container_name: ${COMPOSE_PROJECT_NAME}
    hostname: ${COMPOSE_PROJECT_NAME}
    image: nodered/node-red:${NODE_RED_TAG:-latest}
    environment:
      - TZ
    networks:
      - exposed
      - proxy
      - smarthome
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}:/data
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${NETWORK_DOMAIN:?Netowrk domain is not defined}`) || Host(`nodered.${NETWORK_DOMAIN}`) || Host(`${COMPOSE_PROJECT_NAME}.${MACHINE_DOMAIN:?Machine domain is not defined}`) || Host(`nodered.${MACHINE_DOMAIN}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=1880"

networks:
  exposed:
    external: true
  proxy:
    external: true
  smarthome:
    external: true
