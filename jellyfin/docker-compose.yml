version: '3.9'
name: jellyfin
# Jellyfin stack

# Jellyfin
#
# Page: https://jellyfin.org/
# Code: https://github.com/jellyfin/jellyfin
# Dckr: https://hub.docker.com/r/jellyfin/jellyfin
# Cmps: https://jellyfin.org/docs/general/installation/container#using-docker-compose
#
# Jellyfin is the volunteer-built media solution that puts you in control of
# your media. Stream to any device from your own server, with no strings
# attached. Your media, your server, your way.

services:

  jellyfin:
    container_name: ${COMPOSE_PROJECT_NAME}
    hostname: ${COMPOSE_PROJECT_NAME}
    image: jellyfin/jellyfin
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128 # For intel hwaccel
    volumes:
      - /etc/${COMPOSE_PROJECT_NAME}:/config
      - /srv/${COMPOSE_PROJECT_NAME}/cache:/cache
      - /stockpile:/media
      - /cabinet/download:/mnt/download
    restart: unless-stopped
    networks:
      - exposed
      - proxy
    ports:
      - 8096:8096
    healthcheck:
      test: "curl -f http://localhost:8096/ || exit 1"
    environment:
      - JELLYFIN_PublishedServerUrl
    extra_hosts:
      - "host.docker.internal:host-gateway"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${NETWORK_DOMAIN:?Netowrk domain is not defined}`) || Host(`${COMPOSE_PROJECT_NAME}.${MACHINE_DOMAIN:?Machine domain is not defined}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=8096"

networks:
  exposed:
    external: true
  proxy:
    external: true
