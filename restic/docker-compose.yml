version: '3.9'
name: restic
# restic-related stack

# Backrest
#
# Page: N/A
# Code: https://github.com/garethgeorge/backrest
# Dckr: https://hub.docker.com/r/garethgeorge/backrest
# Cmps: https://github.com/garethgeorge/backrest#running-with-docker-compose
#
# A web-accessible backup solution built on top of restic. Backrest provides a
# WebUI which wraps the restic CLI and makes it easy to create repos, browse
# snapshots, and restore files. Additionally, Backrest can run in the background
# and take an opinionated approach to scheduling snapshots and orchestrating
# repo health operations.

services:

  backrest:
    container_name: backrest
    hostname: backrest
    image: garethgeorge/backrest:${BACKREST_VERSION:-latest}
    restart: unless-stopped
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}:/data
      - /etc/${COMPOSE_PROJECT_NAME}:/config
      - /tmp/${COMPOSE_PROJECT_NAME}:/cache
      - /backup:/repos
      - /etc:/userdata/etc:ro
      - /home:/userdata/home:ro
      - /opt:/userdata/opt:ro
      - /srv:/userdata/srv:ro
      - /var:/userdata/var:ro
    environment:
      - BACKREST_DATA
      - BACKREST_CONFIG
      - XDG_CACHE_HOME
    networks:
      - exposed
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backrest.rule=Host(`backrest.${COMPOSE_DOMAIN:?Compose FQDN missing}`)"
      - "traefik.http.routers.backrest.tls=true"
      - "traefik.http.routers.backrest.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.backrest.service=backrest"
      - "traefik.http.routers.backrest.entrypoints=http,https"
      - "traefik.http.services.backrest.loadbalancer.server.port=9898"

networks:
  exposed:
    external: true
  proxy:
    external: true
