version: '3.9'
name: siyuan
# siyuan stack

# siyuan
#
# Page: https://b3log.org/siyuan
# Code: https://github.com/siyuan-note/siyuan
# Dckr: https://hub.docker.com/r/b3log/siyuan
# Cmps: https://github.com/siyuan-note/siyuan#docker-hosting
#
# A privacy-first, self-hosted, fully open source personal knowledge management
# software, written in typescript and golang.

services:

  siyuan:
    container_name: ${COMPOSE_PROJECT_NAME}
    image: b3log/siyuan:${SIYUAN_TAG:-latest}
    restart: unless-stopped
    command: ['--workspace=/siyuan/workspace/', '--accessAuthCode=${AuthCode}']
    user: '1000:1000'
    volumes:
      - /srv/${COMPOSE_PROJECT_NAME}:/siyuan/workspace
    networks:
      - proxy
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.rule=Host(`${COMPOSE_PROJECT_NAME}.${COMPOSE_DOMAIN:?Compose FQDN missing}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls=true"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.tls.certresolver=${CERT_RESOLVER:?Cert resolver name missing}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.middlewares=authentik@file"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.service=${COMPOSE_PROJECT_NAME}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}.entrypoints=http,https"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=6806"

networks:
  proxy:
    external: true
